// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pan.Julio.Teste.EF;

namespace Pan.Julio.Teste.Migrations
{
    [DbContext(typeof(DBOperacoesContext))]
    [Migration("20200714191126_TestePan")]
    partial class TestePan
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pan.Julio.Teste.Model.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IcAtivo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoCliente")
                        .HasColumnType("int");

                    b.Property<string>("NmCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NuDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Pan.Julio.Teste.Model.ContaCorrente", b =>
                {
                    b.Property<int>("IdContaCorrente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtAbertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtUltOperacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IcAtivo")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("VlSaldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdContaCorrente");

                    b.HasIndex("ClienteIdCliente");

                    b.ToTable("ContaCorrente");
                });

            modelBuilder.Entity("Pan.Julio.Teste.Model.Lancamentos", b =>
                {
                    b.Property<int>("IdLancamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContaCorrenteIdContaCorrente")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtOperacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IcAtivo")
                        .HasColumnType("int");

                    b.Property<int>("IdContaCorrente")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoLancamento")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoOperacao")
                        .HasColumnType("int");

                    b.Property<int?>("TipoLancamentoIdTipoLancamento")
                        .HasColumnType("int");

                    b.Property<int?>("TipoOperacaoIdTipoOperacao")
                        .HasColumnType("int");

                    b.Property<decimal>("VlOperacao")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdLancamento");

                    b.HasIndex("ContaCorrenteIdContaCorrente");

                    b.HasIndex("TipoLancamentoIdTipoLancamento");

                    b.HasIndex("TipoOperacaoIdTipoOperacao");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("Pan.Julio.Teste.Model.TipoLancamento", b =>
                {
                    b.Property<int>("IdTipoLancamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IcAtivo")
                        .HasColumnType("int");

                    b.Property<string>("NmTipoLancamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoLancamento");

                    b.ToTable("TipoLancamento");

                    b.HasData(
                        new
                        {
                            IdTipoLancamento = 1,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 11, 25, 803, DateTimeKind.Local).AddTicks(4080),
                            IcAtivo = 1,
                            NmTipoLancamento = "Débito"
                        },
                        new
                        {
                            IdTipoLancamento = 2,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 11, 25, 805, DateTimeKind.Local).AddTicks(3852),
                            IcAtivo = 1,
                            NmTipoLancamento = "Crédito"
                        });
                });

            modelBuilder.Entity("Pan.Julio.Teste.Model.TipoOperacao", b =>
                {
                    b.Property<int>("IdTipoOperacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IcAtivo")
                        .HasColumnType("int");

                    b.Property<string>("NmTipoOperacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoOperacao");

                    b.ToTable("TipoOperacao");

                    b.HasData(
                        new
                        {
                            IdTipoOperacao = 1,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 11, 25, 807, DateTimeKind.Local).AddTicks(4670),
                            IcAtivo = 1,
                            NmTipoOperacao = "Transferencia"
                        },
                        new
                        {
                            IdTipoOperacao = 2,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 11, 25, 807, DateTimeKind.Local).AddTicks(4749),
                            IcAtivo = 1,
                            NmTipoOperacao = "Doc"
                        },
                        new
                        {
                            IdTipoOperacao = 3,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 11, 25, 807, DateTimeKind.Local).AddTicks(4753),
                            IcAtivo = 1,
                            NmTipoOperacao = "Ted"
                        },
                        new
                        {
                            IdTipoOperacao = 4,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 11, 25, 807, DateTimeKind.Local).AddTicks(4755),
                            IcAtivo = 1,
                            NmTipoOperacao = "Depósito"
                        },
                        new
                        {
                            IdTipoOperacao = 5,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 11, 25, 807, DateTimeKind.Local).AddTicks(4757),
                            IcAtivo = 1,
                            NmTipoOperacao = "Saque"
                        },
                        new
                        {
                            IdTipoOperacao = 6,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 11, 25, 807, DateTimeKind.Local).AddTicks(4759),
                            IcAtivo = 1,
                            NmTipoOperacao = "Pagamento"
                        });
                });

            modelBuilder.Entity("Pan.Julio.Teste.Model.ContaCorrente", b =>
                {
                    b.HasOne("Pan.Julio.Teste.Model.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteIdCliente");
                });

            modelBuilder.Entity("Pan.Julio.Teste.Model.Lancamentos", b =>
                {
                    b.HasOne("Pan.Julio.Teste.Model.ContaCorrente", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("ContaCorrenteIdContaCorrente");

                    b.HasOne("Pan.Julio.Teste.Model.TipoLancamento", "TipoLancamento")
                        .WithMany()
                        .HasForeignKey("TipoLancamentoIdTipoLancamento");

                    b.HasOne("Pan.Julio.Teste.Model.TipoOperacao", "TipoOperacao")
                        .WithMany()
                        .HasForeignKey("TipoOperacaoIdTipoOperacao");
                });
#pragma warning restore 612, 618
        }
    }
}
