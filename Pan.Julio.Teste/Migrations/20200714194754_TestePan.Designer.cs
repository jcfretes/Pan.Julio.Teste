// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pan.Julio.Teste.EF;

namespace Pan.Julio.Teste.Migrations
{
    [DbContext(typeof(DBOperacoesContext))]
    [Migration("20200714194754_TestePan")]
    partial class TestePan
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pan.Julio.Teste.Model.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IcAtivo")
                        .HasColumnType("int");

                    b.Property<bool>("IcPessoaFisica")
                        .HasColumnType("bit");

                    b.Property<string>("NmCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NuDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("IdCliente");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            IdCliente = 1,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 47, 53, 680, DateTimeKind.Local).AddTicks(2367),
                            IcAtivo = 1,
                            IcPessoaFisica = true,
                            NmCliente = "Julio Cesar Fretes",
                            NuDocumento = "11111111111"
                        });
                });

            modelBuilder.Entity("Pan.Julio.Teste.Model.ContaCorrente", b =>
                {
                    b.Property<int>("IdContaCorrente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtAbertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtUltOperacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IcAtivo")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("VlSaldo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdContaCorrente");

                    b.ToTable("ContaCorrente");

                    b.HasData(
                        new
                        {
                            IdContaCorrente = 1,
                            DtAbertura = new DateTime(2020, 7, 14, 16, 47, 53, 680, DateTimeKind.Local).AddTicks(4485),
                            DtCriacao = new DateTime(2020, 7, 14, 16, 47, 53, 680, DateTimeKind.Local).AddTicks(5879),
                            DtUltOperacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IcAtivo = 1,
                            IdCliente = 1,
                            VlSaldo = 1000m
                        },
                        new
                        {
                            IdContaCorrente = 2,
                            DtAbertura = new DateTime(2020, 7, 14, 16, 47, 53, 680, DateTimeKind.Local).AddTicks(6134),
                            DtCriacao = new DateTime(2020, 7, 14, 16, 47, 53, 680, DateTimeKind.Local).AddTicks(6168),
                            DtUltOperacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IcAtivo = 1,
                            IdCliente = 1,
                            VlSaldo = 1000m
                        });
                });

            modelBuilder.Entity("Pan.Julio.Teste.Model.Lancamentos", b =>
                {
                    b.Property<int>("IdLancamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtOperacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IcAtivo")
                        .HasColumnType("int");

                    b.Property<int>("IdContaCorrente")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoLancamento")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoOperacao")
                        .HasColumnType("int");

                    b.Property<decimal>("VlOperacao")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdLancamento");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("Pan.Julio.Teste.Model.TipoLancamento", b =>
                {
                    b.Property<int>("IdTipoLancamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IcAtivo")
                        .HasColumnType("int");

                    b.Property<string>("NmTipoLancamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdTipoLancamento");

                    b.ToTable("TipoLancamento");

                    b.HasData(
                        new
                        {
                            IdTipoLancamento = 1,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 47, 53, 676, DateTimeKind.Local).AddTicks(1462),
                            IcAtivo = 1,
                            NmTipoLancamento = "Débito"
                        },
                        new
                        {
                            IdTipoLancamento = 2,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 47, 53, 677, DateTimeKind.Local).AddTicks(8879),
                            IcAtivo = 1,
                            NmTipoLancamento = "Crédito"
                        });
                });

            modelBuilder.Entity("Pan.Julio.Teste.Model.TipoOperacao", b =>
                {
                    b.Property<int>("IdTipoOperacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IcAtivo")
                        .HasColumnType("int");

                    b.Property<string>("NmTipoOperacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdTipoOperacao");

                    b.ToTable("TipoOperacao");

                    b.HasData(
                        new
                        {
                            IdTipoOperacao = 1,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 47, 53, 679, DateTimeKind.Local).AddTicks(8665),
                            IcAtivo = 1,
                            NmTipoOperacao = "Transferencia"
                        },
                        new
                        {
                            IdTipoOperacao = 2,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 47, 53, 679, DateTimeKind.Local).AddTicks(8730),
                            IcAtivo = 1,
                            NmTipoOperacao = "Doc"
                        },
                        new
                        {
                            IdTipoOperacao = 3,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 47, 53, 679, DateTimeKind.Local).AddTicks(8734),
                            IcAtivo = 1,
                            NmTipoOperacao = "Ted"
                        },
                        new
                        {
                            IdTipoOperacao = 4,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 47, 53, 679, DateTimeKind.Local).AddTicks(8737),
                            IcAtivo = 1,
                            NmTipoOperacao = "Depósito"
                        },
                        new
                        {
                            IdTipoOperacao = 5,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 47, 53, 679, DateTimeKind.Local).AddTicks(8740),
                            IcAtivo = 1,
                            NmTipoOperacao = "Saque"
                        },
                        new
                        {
                            IdTipoOperacao = 6,
                            DtCriacao = new DateTime(2020, 7, 14, 16, 47, 53, 679, DateTimeKind.Local).AddTicks(8742),
                            IcAtivo = 1,
                            NmTipoOperacao = "Pagamento"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
